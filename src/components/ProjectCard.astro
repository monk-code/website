---
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'

interface Props {
  title: string
  description: string
  imageUrl: ImageMetadata
  techStack: string[]
  liveUrl?: string
  repoUrl?: string
}

const { title, description, imageUrl, techStack, liveUrl, repoUrl } = Astro.props
---

<article class="project-card group relative overflow-hidden rounded-xl transition-all duration-300 ease-out hover:-translate-y-1">
  <div class="image-container relative h-64 overflow-hidden">
    <Image 
      src={imageUrl}
      alt={`Screenshot of ${title} project`}
      class="project-card-image w-full h-full object-cover transition-all duration-500 ease-out group-hover:scale-105"
      width={600}
      height={400}
    />
    <div class="image-overlay absolute inset-0"></div>
  </div>
  
  <div class="card-content p-6 flex flex-col gap-4">
    <h3 class="text-2xl font-bold font-heading text-foreground leading-tight tracking-tight">{title}</h3>
    <p class="text-muted-foreground leading-relaxed text-base font-body line-clamp-3">{description}</p>
    
    <div class="tech-stack flex flex-wrap gap-2 mt-auto">
      {techStack.map((tech) => (
        <span class="tech-tag px-3 py-1 text-xs font-medium rounded-full transition-colors">
          {tech}
        </span>
      ))}
    </div>
    
    <div class="project-links flex gap-3 mt-4 pt-4 border-t border-card-border">
      {liveUrl && (
        <a
          href={liveUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="action-primary flex items-center gap-2 px-4 py-2 rounded-lg font-semibold text-sm transition-all"
          aria-label={`View live demo of ${title}`}
        >
          <svg width="16" height="16" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
          View Project
        </a>
      )}
      
      {repoUrl && (
        <a
          href={repoUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="action-secondary flex items-center gap-2 px-4 py-2 rounded-lg font-semibold text-sm transition-all"
          aria-label={`View source code for ${title}`}
        >
          <svg width="16" height="16" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          Source
        </a>
      )}
    </div>
  </div>
  
</article>

<style>
  /* Project Card Styles */
  .project-card {
    background: var(--color-card-bg);
    border: 1px solid var(--color-card-border);
    box-shadow: 0 2px 8px var(--color-card-shadow);
  }
  
  .project-card:hover {
    border-color: var(--color-primary);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
  }
  
  [data-theme="dark"] .project-card {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
  
  [data-theme="dark"] .project-card:hover {
    background: #1f1f1f;
    box-shadow: 
      0 0 30px rgba(255, 222, 10, 0.15),
      0 8px 24px rgba(0, 0, 0, 0.6);
  }
  
  /* Image styles */
  .image-container {
    background: var(--color-muted-foreground);
  }
  
  .project-card-image {
    opacity: 0.9;
  }
  
  [data-theme="dark"] .project-card-image {
    opacity: 0.35;
    filter: brightness(1.1) contrast(0.9);
    mix-blend-mode: luminosity;
  }
  
  .project-card:hover .project-card-image {
    opacity: 1;
  }
  
  [data-theme="dark"] .project-card:hover .project-card-image {
    opacity: 0.45;
  }
  
  /* Image overlay */
  .image-overlay {
    background: linear-gradient(to bottom, transparent 0%, transparent 60%, rgba(0, 0, 0, 0.1) 100%);
  }
  
  [data-theme="dark"] .image-overlay {
    background: linear-gradient(to bottom, transparent 0%, transparent 50%, var(--color-card-bg) 100%);
  }
  
  /* Tech tags */
  .tech-tag {
    background: var(--color-background);
    border: 1px solid var(--color-card-border);
    color: var(--color-foreground);
  }
  
  [data-theme="dark"] .tech-tag {
    background: rgba(255, 222, 10, 0.08);
    border-color: rgba(255, 222, 10, 0.2);
    color: #e4e4e7;
  }
  
  .tech-tag:hover {
    border-color: var(--color-primary);
  }
  
  /* Action buttons */
  .action-primary {
    background: var(--color-primary);
    color: var(--color-primary-foreground);
  }
  
  .action-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(255, 222, 10, 0.3);
  }
  
  .action-secondary {
    background: transparent;
    color: var(--color-foreground);
    border: 1px solid var(--color-card-border);
  }
  
  .action-secondary:hover {
    background: var(--color-emphasis-bg);
    border-color: var(--color-primary);
    transform: translateY(-2px);
  }
  
  [data-theme="dark"] .action-secondary {
    border-color: rgba(255, 255, 255, 0.2);
  }
  
  [data-theme="dark"] .action-secondary:hover {
    background: rgba(255, 222, 10, 0.1);
    border-color: var(--color-primary);
  }
</style>