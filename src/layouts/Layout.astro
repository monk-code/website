---
import '@/styles/global.css'
import Footer from '@/components/layout/Footer.astro'
import BackToTop from '@/components/ui/BackToTop.vue'
import SEO from '@/components/ui/SEO.astro'

export interface Props {
  title?: string
  description?: string
  ogImage?: string
  noindex?: boolean
}

const { title, description, ogImage, noindex = false } = Astro.props
---

<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="generator" content={Astro.generator} />
  
  <!-- SEO -->
  <SEO title={title} description={description} ogImage={ogImage} noindex={noindex} />
  
  <!-- Icons -->
  <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
  <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
  <link rel="manifest" href="/site.webmanifest" />
  
  <!-- Font Loading Strategy -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link 
    href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&family=Montserrat:wght@600;700&family=JetBrains+Mono:wght@400&display=swap" 
    rel="stylesheet"
    media="print"
    onload="this.media='all'"
  />
  <noscript>
    <link 
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500&family=Montserrat:wght@600;700&family=JetBrains+Mono:wght@400&display=swap" 
      rel="stylesheet"
    />
  </noscript>

  <!-- Critical inline script for theme -->
  <script is:inline>
    // Remove no-js class
    document.documentElement.classList.remove('no-js');
    
    // Theme initialization with FOUT prevention
    (function() {
      const root = document.documentElement;
      const stored = typeof localStorage !== 'undefined' && localStorage.getItem('theme');
      const theme = stored || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      
      // Apply theme immediately
      root.setAttribute('data-theme', theme);
      
      // Add transition class after initial render
      requestAnimationFrame(() => {
        root.classList.add('transition-theme');
      });
    })();
  </script>
</head>
<body class="transition-theme">
  <!-- Global gradient layer for decorative elements -->
  <div class="page-gradient-layer" aria-hidden="true">
    <div class="gradient-orb gradient-orb-1"></div>
    <div class="gradient-orb gradient-orb-2"></div>
    <!-- Hero section gradients moved to page level -->
    <div class="hero-gradient hero-gradient-left"></div>
    <div class="hero-gradient hero-gradient-right"></div>
  </div>
  
  <!-- Skip to main content for keyboard users -->
  <a 
    href="#main" 
    class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary text-primary-foreground px-4 py-2 rounded-md"
  >
    Skip to main content
  </a>
  
  <div class="min-h-screen flex flex-col">
    <main id="main" class="flex-grow">
      <slot />
    </main>
    
    <Footer />
  </div>
  
  <!-- Back to Top Button -->
  <BackToTop client:idle />
  
  <!-- Theme persistence -->
  <script>
    // Persist theme changes
    window.addEventListener('theme-change', (e) => {
      const customEvent = e as CustomEvent;
      const theme = customEvent.detail.theme;
      localStorage.setItem('theme', theme);
      document.documentElement.setAttribute('data-theme', theme);
    });
  </script>
  
  <!-- Fade-in Animation Script -->
  <script src="/fade-in.js" defer is:inline></script>
  
  <!-- Smooth Scrolling Script -->
  <script src="/smooth-scroll.js" defer is:inline></script>
</body>
</html>